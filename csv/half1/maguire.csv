#,Status,Project,Tracker,Priority,Subject,Assigned to,Category,Target version,Author,Start,Due date,% Done,Estimated time,Created,Updated,Likelihood,Severity,Found in Version,Impact,Expected Use,OS,Support Group,Description
3041,Resolved,VisIt,Bug,Normal,triad letters bug,Alister Maguire,"",2.13.1,Alister Maguire,03/09/2018,"",100,5.0,03/09/2018 04:00 pm,03/12/2018 07:31 pm,3 - Occasional,2 - Minor Irritation,2.13.0,"","",All,Any,"I've noticed for a while now that the Y label in the triad will sometimes get distorted and look like a smeared Z. Now that we have the ability to change the triad font, I've noticed that this only occurs when using the default Arial font. When the bug appears, I can even switch from Arial to another font, at which point the bug disappears, and then switch back to Arial and see the distortion reappear. "
3075,Resolved,VisIt,Bug,Normal,Multi domain issue in test suite,Alister Maguire,"",3.0,Alister Maguire,04/25/2018,"",100,0.0,04/25/2018 07:37 pm,05/10/2018 01:28 pm,3 - Occasional,4 - Crash / Wrong Results,2.12.3,"","",All,Any,"While creating some tests for reflecting over an arbitrary plane, I noticed a strange issue with rendering multi-domain data in the test suite. The issue was clearest with rect3d vs multi_rect3d (curv3d also showed differences, but they were less extreme). Basically, you can see very pronounced boundary lines in the multi-domain dataset that do not appear in the single domain version. I could not reproduce this when running VisIt directly and opening up multi_rect3d myself; it only appeared when running the test suite.

To repeat:
Open up reflect.py in the test suite, and add something like what follows:
OpenDatabase(silo_data_path(""multi_rect3d.silo""))
AddPlot(""Pseudocolor"", ""d"")
DrawPlots()
Test(""foo"")


I've attached an image of the result I get when I do the above. "
3046,Pending,VisIt,Docs,Normal,Integrate python manual into sphinx,Alister Maguire,"",2.13.3,Alister Maguire,03/15/2018,"",90,"",03/15/2018 02:13 pm,05/10/2018 08:15 pm,3 - Occasional,1 - Not Serious,2.12.3,"","","",Any,Eric had mentioned the need to move some of the Wiki docs over to our Sphinx docs. It sounds like a good place to start would be the python manual for VisIt. 
3045,Pending,VisIt,Bug,High,Distributed Resample Query Bug,"","","",Alister Maguire,03/15/2018,"",0,"",03/15/2018 02:10 pm,03/20/2018 06:34 pm,3 - Occasional,2 - Minor Irritation,2.12.3,"","",All,Any,"When running VisIt in parallel, if I perform a resample with distributed resample enabled and then query the number of nodes or zones of the actual data, the result of the query is very incorrect. 

Example:
Open up rect2d.silo and add a Pseudocolor plot. 
Add a 2D resample operator of 10x10 samples, and disable 'distributed resample'.
Draw the plot and query the number of zones. You should get 100.
Now resample with 'distributed resample' enabled. 
Again query the number of zones. This returns 20 for me.  
"
3097,Rejected,VisIt,Docs,Low,Migrate wiki pages to sphinx ,"","","",Alister Maguire,05/07/2018,"",0,"",05/07/2018 07:19 pm,05/08/2018 05:39 pm,3 - Occasional,1 - Not Serious,2.12.3,"","","",Any,Eric and I had a conversation at some point about the desire to migrate VisIt's wiki pages (especially the tutorial content) to sphinx. This is a reminder to start thinking about/doing this in the near future. 
3101,Resolved,VisIt,Bug,Normal,Pick over time return value,Alister Maguire,"","",Alister Maguire,05/09/2018,"",100,"",05/09/2018 05:07 pm,05/09/2018 05:08 pm,3 - Occasional,2 - Minor Irritation,2.12.3,"","",All,Any,"When performing a pick over time, the return value is carried over from the most recent pick, when it should be a None value.
Example

    time1   = NodePick(coord=(3, .5, 3), do_time=1, start_time=0, end_time=70)
    no_time = NodePick(coord=(2, .2, 2), do_time=0)
    time2   = NodePick(coord=(3, .5, 3), do_time=1, start_time=0, end_time=70)

The statement ""type(time1) == type(time2)"" should be True, but, with this bug, it is false. Instead, time2 will be equivalent to no_time in value. "
3144,Rejected,VisIt,Bug,Normal,PickByNode wrong time curve,Alister Maguire,"","",Alister Maguire,05/22/2018,"",0,"",05/22/2018 02:29 pm,05/22/2018 06:53 pm,4 - Common,2 - Minor Irritation,2.12.3,"","",All,Any,"While adding the option to plot pick range curves over time, I noticed that the current curves produced by PickByNode are using the coordinate position to retrieve values instead of the element ID, even though the element ID is what was specified for the pick. "
3167,Resolved,VisIt,Bug,Normal,"VTK8 - Pseudocolor plot of curv3d, looks like normals are wrong","","","",Alister Maguire,06/20/2018,"",100,7.0,06/20/2018 02:08 pm,06/20/2018 02:08 pm,3 - Occasional,4 - Crash / Wrong Results,trunk,"","",All,Any,"Pseudocolor plot of curv3d, looks like normals are wrong. It looks like the baseline is using vertex normal and the new result is using face normal.

"
3168,Resolved,VisIt,Bug,Normal,"VTK8 - Pseudocolor plot of curv3d, looks like normals are wrong",Alister Maguire,"","",Alister Maguire,06/20/2018,"",100,7.0,06/20/2018 02:10 pm,06/20/2018 02:12 pm,3 - Occasional,4 - Crash / Wrong Results,trunk,"","",All,Any,"Pseudocolor plot of curv3d, looks like normals are wrong. It looks like the baseline is using vertex normal and the new result is using face normal.

"
